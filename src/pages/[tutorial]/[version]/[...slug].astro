---
import BaseHtml from '../../../layouts/BaseHtml.astro'
import BaseHead from '../../../layouts/BaseHead.astro'
import BaseBody from '../../../layouts/BaseBody.astro'
import { getCollection } from 'astro:content'
import { ViewTransitions } from 'astro:transitions'

export async function getStaticPaths(){
  const categories = await getCollection('categories', ({ data }) => data.version)

  const lessonsPerTutorial = await Promise.all(categories.map(async tutorial => {
    // example id: v1/1-1-1-setup-and-overview (it includes the path of sub directories)
    const tutorialLessons = await getCollection(tutorial.slug, ({ id }) => id.startsWith(tutorial.data.version + '/') )

    return tutorialLessons.map(lesson => {
      const nextLesson = tutorialLessons
        .sort((a, b) => (a.id > b.id) ? 1 : -1)
        .find(scanningLesson => scanningLesson.id > lesson.id)
      const nextLessonPath = nextLesson?.slug ? `/${tutorial.data.slug}/${tutorial.data.version}/${nextLesson.slug}` : ''
      const nextLessonTitle = nextLesson?.data?.title || ''

      return {
        params: { tutorial: tutorial.slug, version: tutorial.data.version, slug: lesson.slug }, props: { lesson, tutorial, nextLessonPath, nextLessonTitle }
      }
    })
  }))

  return lessonsPerTutorial.flat()
}

const { lesson, tutorial, nextLessonPath, nextLessonTitle } = Astro.props
const { Content } = await lesson.render()

const tutorialPath = `/${tutorial.data.slug}/${tutorial.data.version}`
---

<BaseHtml>
  <BaseHead title={`${lesson.data.title} | ${tutorial.data.title}`} description={lesson.data.description}>
    <ViewTransitions />
  </BaseHead>
  <BaseBody>
    <nav>
      <a href="/">Code Cookies</a> &gt; <a href={tutorialPath}>{tutorial.data.title}</a> &gt; {lesson.data.title}
    </nav>
  
    <header>
      <h1>{lesson.data.title}</h1>
  
      {lesson.data.lastUpdate && (
        <a href={`https://github.com/samlawski/codecookies/commits/main/src/content/${tutorial.data.slug}/${lesson.id}`} target="_blank">
          Last content update {lesson.data.lastUpdate}
        </a>
      )}
    </header>
  
    <main>
      {lesson.data.videoId && (
        <div id="video">
          <p>
            <button onclick={`showVideo('${lesson.data.videoId}')`} name="Play" title="Play YouTube Video">&#9658;</button>
            <small>Clicking the <i>Play</i> button above will load a video from YouTube. For playing YouTube videos, <a rel="noreferrer" href="https://policies.google.com/privacy" target="_blank">Google's privacy policy</a> applies.</small>
          </p>
        </div>
      )}
  
      <article>
        <Content />
      </article>
    </main>
  
    <footer>
      {nextLessonPath && (<a class="button" href={nextLessonPath}>
        Next: {nextLessonTitle}
      </a>)}
    </footer>
  
    <nav>
      <a href="/">Code Cookies</a> &gt; <a href={tutorialPath}>{tutorial.data.title}</a> &gt; {lesson.data.title}
    </nav>
  </BaseBody>
</BaseHtml>

<script is:inline>
  function showVideo(videoId){
    document.getElementById('video').innerHTML = '<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/' + videoId + '?autoplay=1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>'
  }
</script>

<style is:global>
  #video {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 0;
    height: 0;
    overflow: hidden;
    
    margin-bottom: 20px;

    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #0066A8;
  }
  #video p {
    display: block;
    margin-top: 56.25%;
    text-align: center;
    color: white;
    padding: 10px; 
  }
  #video a {
    color: #BBF3E3;
  }
  #video button {
    display: block;
    margin: auto;

    cursor: pointer;
    padding: 20px 50px;
    font-size: 3rem;
    border: 0;
    background-color: rgba(255, 255, 255, 0.5);
  }
  #video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  header h1 {
    margin: 4px 0;
  }

  article h1 a,
  article h2 a,
  article h3 a,
  article h4 a,
  article h5 a {
    text-decoration: none;
    color: #212121;
  }
  article h1 a::after,
  article h2 a::after,
  article h3 a::after,
  article h4 a::after,
  article h5 a::after {
    content: ' ðŸ”—';
    opacity: .3;
    transition: opacity .2s ease-in-out;
  }
  article h1 a:hover::after,
  article h2 a:hover::after,
  article h3 a:hover::after,
  article h4 a:hover::after,
  article h5 a:hover::after {
    content: ' ðŸ”—';
    opacity: 1;
  }

  article ul,
  article ol {
    padding-left: 20px;
  }
  article h2 {
    margin: 30px 0 10px 0;
  }
  article h3 {
    margin: 20px 0 10px 0;
  }
  article img {
    max-width: 100%;
    margin: auto;
    display: block;
  }

  /* Heading */
  body > header > a {
    color: #666666;
    font-size: .7rem;
  }
</style>